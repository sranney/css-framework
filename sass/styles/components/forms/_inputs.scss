//styling for text inputs
//general - all inputs will have this styling
input,
:-webkit-autofill {
    font-family: $defaultFontFamily;
    font-size: $defaultInputFontSize;
    transition: all 0.5s;
    outline: none;
    @include border-tool($color: $defaultInputBorders);
    height: $defaultInputHeight;
    background-color: $defaultInputBackgroundColor;
    padding-left: $defaultInputPaddingLeft;
}

//interactive types for inputs - bottom highlight, highlight
//highlight input
.input-highlight {
    @include border-tool($width: $inputHighlightBorderWidth, $color: $inputHighlightBorderColor);
    border-radius: $inputHighlightBorderRadius;
    box-shadow: $inputHighlightBoxShadow;

    &.focus,
    &.focus:invalid:placeholder-shown {
        box-shadow: $inputHighlightFocusBoxShadowSuccess;
        @include border-tool($property: 'color', $color: $inputHighlightFocusBorderColorSuccess);
    }

    &:not(.focus):valid {
        @include border-tool($property: 'color',$color: $inputHighlightNotFocusBorderColorValid);
    }

    &.interacted:not(.focus):invalid {
        @include border-tool($property: 'color', $color: $inputHighlightNotFocusBorderColorInvalid);
    }

    &:-webkit-autofill {
        -webkit-box-shadow: $inputHighlightAutoFillBoxShadow;
        @include border-tool($color: $inputHighlightAutoFillBorderColor,$width: $inputHighlightAutoFillBorderWidth, $flag: '!important');
    }
}

//bottom-highlight input
.input-bottom-highlight {
    box-shadow: $inputBottomHighlightBoxShadow;
    @include border-tool($property: 'bottom',$width: '2px',$color: 'transparent');
    @include border-tool($property: 'left', $width: '0px');
    @include border-tool($property: 'right', $width: '0px');

    &.focus,
    &.focus:invalid:placeholder-shown{
        box-shadow: $inputBottomHighlightFocusBoxShadow;
        border-bottom-color: $inputBottomHighlightBottomBorderColorFocus;
    }
    &:not(.focus):valid {
        box-shadow: $inputBottomHighlightBoxShadowValid;
        border-bottom-color: $inputBottomHighlightBottomBorderValid;
    }
    &.interacted:not(.focus):invalid {
        box-shadow: $inputBottomHighlightBoxShadowInvalid;
        border-bottom-color: $inputBottomHighlightBottomBorderColor;
        color: $inputBottomHighlightFontColor;
    }
}


.bg-validate.interacted:not(.focus):invalid {
    background-color: $inputBottomHighlightInvalidBackground;
}

.input-bottom-highlight:-webkit-autofill {
    box-shadow: $inputBottomHighlightAutofillBoxShadow;
}

//span styling
//general styling for all form spans following inputs
label input+span {
    left: map-get($spacers, 2);
    position: absolute;
    transition: all 0.25s;
    pointer-events: none;
}
input+span {
    top: $inputLabelSpanTopPosition;
    transform: translateY(-50%);
    font-size: $inputLabelSpanFontSize;
}

input:not(:placeholder-shown):invalid+span{
    color: $inputLabelSpanInvalidColor;
}

:-webkit-auto-fill + span {
    color: $inputLabelSpanAutoFillColor;
}

input:placeholder-shown+span {
    color: $inputLabelSpanPlaceholderShownColor;
}


//slight modification for left placement for spans that are used with .highlight inputs
.input-highlight+span {
    left: $inputHighlightSpanLeftPosition;
}

//span classes for hover effects
//span.hover-bolden
input + .hover-bolden {
    color: $hoverBoldenLabelSpanColor;
}
input:not(.focus):placeholder-shown:hover + .hover-bolden {
    color: $hoverBoldenSpanColorOnHover;
    font-size: $hoverBoldenSpanColorOnHoverFontSize;
}
input.focus + .hover-bolden,
.interacted:not(:placeholder-shown) + .hover-bolden,
:-webkit-autofill + .hover-bolden {
    opacity: 0;
}

//span.hover-expand
input + .hover-expand {
    color: $hoverExpandLabelSpanColor;
}

input:not(.focus):placeholder-shown:hover + .hover-expand {
    font-size: $hoverExpandLabelSpanOnHoverFontSize;
    color: $hoverExpandLabelSpanOnHoverColor;
    letter-spacing: $hoverExpandLabelSpanOnHoverLetterSpcng;
}

input.focus + .hover-expand,
.interacted:not(:placeholder-shown) + .hover-expand,
:-webkit-autofill + .hover-expand {
    opacity: 0;
}

//span.to-above
.interacted:not(:placeholder-shown)+.to-above,
:-webkit-autofill + .to-above {
    top: $toAboveInteractedSpanTopPosition;
    font-size: $toAboveInteractedSpanFontSize;
    opacity: 1;
    color: $toAboveInteractedSpanColor;
}

.interacted:not(.focus):not(:placeholder-shown):invalid+.to-above {
    color: $toAboveInvalidSpanColor;
}

.interacted.focus:placeholder-shown+.to-above {
    opacity: 1;
    letter-spacing: $toAboveFocusSpanLetterSpacing;
    color: $toAboveFocusSpanColor;
}

//span.to-below 
.interacted:not(:placeholder-shown)+.to-below,
:-webkit-autofill + .to-below {
    top: $toBelowInteractedSpanTopPosition;
    font-size: $toBelowInteractedSpanFontSize;
    opacity: 1;
    color: $toBelowInteractedSpanColor;
}

.interacted:not(.focus):not(:placeholder-shown):invalid+.to-below {
    color: $toBelowInvalidSpanColor;
}

.interacted.focus:placeholder-shown+.to-below {
    opacity: 1;
    letter-spacing: $toBelowFocusSpanLetterSpacing;
    color: $toBelowFocusSpanColor;
}